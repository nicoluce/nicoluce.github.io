{"version":3,"sources":["views/HomeView.tsx","App.tsx","store/index.ts","index.tsx"],"names":["connector","connect","state","props","Header","Content","style","display","alignItems","Footer","App","path","element","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAuBeA,EAhBGC,aAFM,SAACC,GAAD,MAAsB,KAEH,GAgB5BF,EAXkC,SAAAG,GAC/C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAOC,OAAR,MACA,kBAAC,IAAOC,QAAR,CAAgBC,MAAO,CAAEC,QAAS,OAAQC,WAAY,cAEtD,kBAAC,IAAOC,OAAR,UCNSC,EARH,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,kBAAC,EAAD,U,eCJzBC,EAAcC,YAAgB,IAarBC,EAXDC,YAAe,CAC3BC,QAASJ,ICEXK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,SAIRM,SAASC,eAAe,W","file":"static/js/main.e32d9bb4.chunk.js","sourcesContent":["import { Layout } from \"antd\";\nimport React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { AppState } from \"store\";\n\nconst mapStateToProps = (state: AppState) => ({});\n\nconst connector = connect(mapStateToProps, {});\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = {} & PropsFromRedux;\n\nconst HomeView: React.FunctionComponent<Props> = props => {\n  return (\n    <Layout>\n      <Layout.Header></Layout.Header>\n      <Layout.Content style={{ display: \"flex\", alignItems: \"baseline\" }}>\n      </Layout.Content>\n      <Layout.Footer></Layout.Footer>\n    </Layout>\n  );\n};\n\nexport default connector(HomeView);\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport HomeView from \"views/HomeView\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<HomeView />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst rootReducer = combineReducers({});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n\r\nexport const useAppSelector = (selector: (state: AppState) => AppState) => useSelector(selector);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./style/index.less\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n          <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}